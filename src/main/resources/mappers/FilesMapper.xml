<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="information_grep.backend.FilesMapper">
  <resultMap id="BaseResultMap" type="information_grep.backend.Files">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="time" jdbcType="VARCHAR" property="time" />
    <result column="url" jdbcType="VARCHAR" property="url" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="information_grep.backend.FilesWithBLOBs">
    <result column="title" jdbcType="LONGVARCHAR" property="title" />
    <result column="cleaned_words" jdbcType="LONGVARCHAR" property="cleanedWords" />
    <result column="total_words" jdbcType="LONGVARCHAR" property="totalWords" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, time, url
  </sql>
  <sql id="Blob_Column_List">
    title, cleaned_words, total_words
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="information_grep.backend.FilesExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from postings
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="information_grep.backend.FilesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from postings
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from postings
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from postings
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="information_grep.backend.FilesExample">
    delete from postings
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="information_grep.backend.FilesWithBLOBs">
    insert into postings (id, time, url, 
      title, cleaned_words, total_words
      )
    values (#{id,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{title,jdbcType=LONGVARCHAR}, #{cleanedWords,jdbcType=LONGVARCHAR}, #{totalWords,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="information_grep.backend.FilesWithBLOBs">
    insert into postings
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="cleanedWords != null">
        cleaned_words,
      </if>
      <if test="totalWords != null">
        total_words,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=LONGVARCHAR},
      </if>
      <if test="cleanedWords != null">
        #{cleanedWords,jdbcType=LONGVARCHAR},
      </if>
      <if test="totalWords != null">
        #{totalWords,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="information_grep.backend.FilesExample" resultType="java.lang.Long">
    select count(*) from postings
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update postings
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.cleanedWords != null">
        cleaned_words = #{record.cleanedWords,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.totalWords != null">
        total_words = #{record.totalWords,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update postings
    set id = #{record.id,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=LONGVARCHAR},
      cleaned_words = #{record.cleanedWords,jdbcType=LONGVARCHAR},
      total_words = #{record.totalWords,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update postings
    set id = #{record.id,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="information_grep.backend.FilesWithBLOBs">
    update postings
    <set>
      <if test="time != null">
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=LONGVARCHAR},
      </if>
      <if test="cleanedWords != null">
        cleaned_words = #{cleanedWords,jdbcType=LONGVARCHAR},
      </if>
      <if test="totalWords != null">
        total_words = #{totalWords,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="information_grep.backend.FilesWithBLOBs">
    update postings
    set time = #{time,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      title = #{title,jdbcType=LONGVARCHAR},
      cleaned_words = #{cleanedWords,jdbcType=LONGVARCHAR},
      total_words = #{totalWords,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="information_grep.backend.Files">
    update postings
    set time = #{time,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>